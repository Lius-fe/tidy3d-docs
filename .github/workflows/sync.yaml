name: build&sync
on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      env:
        description: environment
        default: dev
        required: true
jobs:
  set_env:
    outputs:
      env: ${{ steps.setenv.outputs.env }}
      dest-branch: ${{ steps.dest-branch.outputs.branch }}
    runs-on: ubuntu-latest
    steps:
      - id: setenv
        run: |
          if test -n "${{ github.event.inputs.env }}"
          then
            echo "::set-output name=env::${{ github.event.inputs.env }}"
            echo "ENV=${{ github.event.inputs.env }}" >> $GITHUB_ENV
          fi
          if test "${{ github.event_name }}" = 'push' -a "${{ github.ref }}" = 'refs/heads/develop'
          then
            echo "::set-output name=env::dev"
            echo "ENV=dev" >> $GITHUB_ENV
          fi
          if test "${{ github.event_name }}" = 'push' -a "${{ github.ref }}" = 'refs/heads/main'
          then
            echo "::set-output name=env::prod"
            echo "ENV=prod" >> $GITHUB_ENV
          fi
      - id: dest-branch
        run: |
          case ${{ env.ENV }} in
            dev)
            echo "::set-output name=branch::feature/examples"
            ;;
            prod)
            echo "::set-output name=branch::main"
            ;;
          esac
  build-and-deploy:
    needs: set_env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: echo environment
        run: |
          echo "::notice ::env:${{needs.set_env.outputs.env}}"
          echo "::notice ::dest-branch:${{needs.set_env.outputs.dest-branch}}"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
#       - run: sudo apt update && sudo apt install -y pandoc && pip install pandoc
      - run: sudo apt update && sudo apt install -y git
      - run: cd ${{ github.workspace }}/docs && pip install beautifulsoup4 nbformat nbconvert pyyaml
#       - run: cd ${{ github.workspace }}/docs/source/notebooks && mkdir html && python convert.py
#       - run: |
#           cd ${{ github.workspace }}
#           mkdir -p build
#           ls -la ${{ github.workspace }}/docs/source/notebooks/html
#           cp -r ${{ github.workspace }}/docs/source/notebooks/html/ build/
#           ls -la build
#       - uses: actions/upload-artifact@v3
#         with:
#             name: output
#             path: build/
#             retention-days: 7
#       - run: |
#           export GIT_TRACE_PACKET=1
#           export GIT_TRACE=1
#           export GIT_CURL_VERBOSE=1
#           git config --global http.version HTTP/1.1
          
      - uses: cpina/github-action-push-to-another-repository@cbe757f8d8b380dd2b3ceec5a80fbcd61f1f3107 #1.7
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_PAT }}
#           GIT_TRACE_PACKET: 1
#           GIT_TRACE: 1
#           GIT_CURL_VERBOSE: 1
        with:
          source-directory: 'docs/source/aaa/'
          destination-github-username: lius-magic
          destination-repository-name: tidy3d-docs
          user-name: bot
          user-email: bot@flexcompute.com
          target-branch: develop
          target-directory: abc/examples/notebooks
      
